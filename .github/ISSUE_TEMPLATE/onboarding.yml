name: üöÄ Team Onboarding
description: Service interface for onboarding.
title: "üöÄ Onboarding "
labels:
  - "enhancement"
  - "good first issue"
  - "onboarding"
  - "platform-team"

body:
  - type: markdown
    attributes:
      value: |
        <details>
        <summary>üõ†Ô∏è Developer Implementation Guide</summary>

        [![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/osinfra-io/github-opentofu-codespace)

        ## üöÄ Implementation Steps

        ### 1. üìÅ Determine Team Configuration File
        - **Platform Teams**: `teams/pt-{team-key}.tfvars` (e.g., `pt-kubernetes.tfvars`)
        - **Stream-aligned Teams**: `teams/st-{team-key}.tfvars` (e.g., `st-customer-trust.tfvars`)
        - **Complicated-subsystem Teams**: `teams/cst-{team-key}.tfvars`
        - **Enabling Teams**: `teams/et-{team-key}.tfvars`

        ### 2. üîÑ Team Key Conversion
        Convert display name to team key: `"Customer Trust"` ‚Üí `customer-trust`
        - Lowercase all characters
        - Replace spaces with hyphens
        - Remove special characters

        ### 3. ‚öôÔ∏è File Operations
        - **Add new team**: Create new `.tfvars` file with team configuration
        - **Update existing team**: Modify existing `.tfvars` file
        - **Delete team**: Remove `.tfvars` file (requires manual resource cleanup)

        ### 4. üìù Configuration Structure
        ```hcl
        team = {
          {team-key} = {
            display_name = "{Team Display Name}"
            team_type    = "{team-type-from-dropdown}"

            github_parent_team = { ... }
            github_child_teams = { ... }
            google_identity_groups = { ... }
            datadog_team = { ... }
          }
        }
        ```
        </details>

  - type: markdown
    attributes:
      value: |
        Please fill out the following details to initiate the onboarding process.

  - type: input
    id: email-address
    attributes:
      label: "Requestor email:"
      description: How can we get in touch with you if we need more info?
      placeholder: email@example.com
    validations:
      required: true

  - type: dropdown
    id: operation-type
    attributes:
      label: "Operation type:"
      description: What type of team operation do you need?
      options:
        - Add new team
        - Update existing team
        - Delete team
    validations:
      required: true

  - type: input
    id: team-name
    attributes:
      label: "Team name:"
      description: The display name for the team (Title Case, e.g., "Customer Trust", "Platform Engineering"). This becomes the team key in lowercase with hyphens (e.g., "Customer Trust" ‚Üí "customer-trust")
      placeholder: Customer Trust
    validations:
      required: true

  - type: dropdown
    id: team-type
    attributes:
      label: "Team type (Team Topologies):"
      description: Select the team type according to Team Topologies methodology
      options:
        - Platform Team - Provides internal services to accelerate stream-aligned teams
        - Stream-aligned Team - Aligned to business capabilities/customer value streams
        - Complicated Subsystem Team - Focus on specific technical domains requiring deep expertise
        - Enabling Team - Help stream-aligned teams overcome obstacles and develop capabilities
    validations:
      required: true

  - type: textarea
    id: github-parent-team
    attributes:
      label: "GitHub parent team membership:"
      description: |
        Configure the top-level GitHub team membership.
        Use YAML list format as shown in the placeholder.
      value: |
        maintainers = []
        members     = []
    validations:
      required: false

  - type: textarea
    id: github-child-teams
    attributes:
      label: "GitHub child teams membership:"
      description: |
        Configure the child team memberships for approval workflows.
        All four teams are required: sandbox-approver, non-production-approver, production-approver, repository-administrators
      value: |
        sandbox-approver = {
          maintainers = []
          members     = []
        }
        non-production-approver = {
          maintainers = []
          members     = []
        }
        production-approver = {
          maintainers = []
          members     = []
        }
        repository-administrators = {
          maintainers = []
          members     = []
        }
    validations:
      required: false

  - type: textarea
    id: google-identity-groups
    attributes:
      label: "Google Cloud Identity Groups:"
      description: |
        Configure membership for Google Cloud Identity Groups (3 roles: admin, writer, reader).
        Use email addresses for Google Workspace users.
      value: |
        admin = {
          managers = []
          members  = []
          owners   = []
        }
        writer = {
          managers = []
          members  = []
          owners   = []
        }
        reader = {
          managers = []
          members  = []
          owners   = []
        }
    validations:
      required: false

  - type: textarea
    id: datadog-team
    attributes:
      label: "Datadog team membership:"
      description: |
        Configure Datadog team for monitoring and observability.
        Use email addresses for team members.
      value: |
        admins  = []
        members = []
    validations:
      required: false

  - type: textarea
    id: business-justification
    attributes:
      label: "Business justification:"
      description: |
        Explain the business need for this team operation.
        - For new teams: What business capability/domain will this team own?
        - For updates: What changes are needed and why?
        - For deletions: Why is the team being dissolved? What happens to their resources?
      placeholder: |
        This stream-aligned team will own the customer trust and safety domain, including user verification, fraud detection, and compliance monitoring systems.
    validations:
      required: true

  - type: textarea
    id: additional-comments
    attributes:
      label: "Additional comments:"
      description: |
        Anything else you'd like to add? Include any special requirements,
        dependencies, or context that would help us understand your request better.
    validations:
      required: false
